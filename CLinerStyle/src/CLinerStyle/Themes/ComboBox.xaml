<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:oc="clr-namespace:Lib.Controls;assembly=Lib.Controls.MyControls"
                   >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CLinerStyle;component/Themes/CsColor.xaml" />

        <ResourceDictionary Source="pack://application:,,,/CLinerStyle;component/Themes/Border.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="28" />
            </Grid.ColumnDefinitions>
            <!--左边字体边框-->
            <Border Grid.Column="0" BorderThickness="2" BorderBrush="Transparent" />

            <Border Grid.Column="1" Background="Transparent" Cursor="Hand"/>
            <Path x:Name="Arrow" Width="10" Height="5" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"  Stretch="Fill" Fill="White" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle1" TargetType="{x:Type oc:TComboBox}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type oc:TComboBox}">
                    <Grid>
                    <AdornerDecorator>
                        <Border x:Name="border"  Style="{StaticResource BorderStyle_1_Effect}" Background="{TemplateBinding Background}">
                            
                        </Border>
                    </AdornerDecorator>
                    <Grid Clip="{Binding ElementName=GeometryEllipse, Path=RenderedGeometry}" ClipToBounds="True">
                        <Grid.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#50ffffff" Offset="0"/>
                                <GradientStop Color="#50000000" Offset="1"/>
                            </LinearGradientBrush>
                        </Grid.Background>
                        <!--ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen-->
                        <ToggleButton Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <ContentPresenter  HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>

                        <!--必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它-->
                        <TextBox Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                        <!--Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen-->
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid  MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border  x:Name="DropDownBorder" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1"/>

                                <ScrollViewer  Margin="4,6,4,6" Style="{DynamicResource SimpleScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <!--StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True-->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="{TemplateBinding Background}"/>
                                </ScrollViewer>
                                    <Grid.Effect>
                                        <DropShadowEffect BlurRadius="3" Direction="-90" Opacity="0.8" ShadowDepth="3"></DropShadowEffect>
                                    </Grid.Effect>
                                </Grid>
                             
                        </Popup>
                        <Rectangle  x:Name="GeometryEllipse" Fill="{x:Null}" IsHitTestVisible="False"  Focusable="False" RadiusX="3" RadiusY="3"  />
                    </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>